<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Mountains</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <style>
    body {
      background: #fff;
      padding: 20px;
      line-height: 1.6;
    }

    nav {
        margin-top: -20px;  /* or whatever the body padding is */
    }

    h1 {
      font-size: 2rem;
      border-bottom: 2px solid black;
      display: inline-block;
      margin-bottom: 20px;
    }

    .mountain {
      border: 1px solid #dee2e6;
      padding: 10px;
      margin-bottom: 20px;
      border-radius: .375rem;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
    }

    .info-button {
      font-size: 0.9rem;
      background: #eee;
      padding: 2px 6px;
      border: 1px solid #000;
    }

    .arrow {
      font-size: 1.2rem;
      margin-left: 10px;
    }

    .lifts {
      margin-top: 10px;
      display: none;
    }

    .basic-info-row {
      display: flex;
      justify-content: space-between;
      padding: 2px 0;
      color: black;
    }

    .mountain.open .lifts {
      display: block;
    }

    .btn-primary {
        background-color: #0d6efd !important; /* Bootstrap's blue */
        border-color: #0d6efd !important;
    }

    .btn-primary:hover {
        background-color: #61b5ff !important;
        border-color: #61b5ff !important;
    }
    
  </style>
</head>
<body>
{{> nav}}

  <h1>Mountains</h1>

  <div class="mb-3">
    <label for="sortSelect" class="form-label">Sort by:</label>
    <select id="sortSelect" class="form-select" onchange="sortMountains()">
      <option value="name">Name</option>
      <option value="recommended">Recommended</option>
      <option value="avg_rating">Rating</option>
      <option value="avg_busyness">Busyness</option>
    </select>
  </div>

  <div id="mountain-container"></div>

  <script>
    const copper = {{{json copper}}};
    const winter_park = {{{json winter_park}}};
    const eldora = {{{json eldora}}};
    const steamboat = {{{json steamboat}}};

    const container = document.getElementById('mountain-container');
    container.innerHTML = ''; // clear previous cards

    container.appendChild(createMountainCard('copper'));
    document.getElementById('copper-busyness').textContent = `${parseFloat(copper.avg_busyness) || '-'}/5`;
    container.appendChild(createMountainCard('eldora'));
    container.appendChild(createMountainCard('steamboat'));
    container.appendChild(createMountainCard('winter_park'));

    function sortMountains() {
      const sort_by = document.getElementById('sortSelect').value;

      let copp_done = false;
      let eld_done = false;
      let win_done = false;
      let stem_done = false;

      const container = document.getElementById('mountain-container');
      container.innerHTML = ''; // clear previous cards

      if(sort_by == 'avg_rating'){
        const copper_rec = copper.avg_rating;
        const eldora_rec = eldora.avg_rating;
        const steamboat_rec = steamboat.avg_rating;
        const winter_park_rec = winter_park.avg_rating;

        const sorted_vals = [copper_rec, eldora_rec, steamboat_rec, winter_park_rec].sort((x, y) => y - x);

        for(i in sorted_vals){
          if (copper_rec == sorted_vals[i] && copp_done == false) {
            container.appendChild(createMountainCard('copper'));
            copp_done = true;
          } else if (eldora_rec == sorted_vals[i] && eld_done == false) {
            container.appendChild(createMountainCard('eldora'));
            eld_done = true;
          } else if (steamboat_rec == sorted_vals[i] && stem_done == false) {
            container.appendChild(createMountainCard('steamboat'));
            stem_done = true;
          } else if (winter_park_rec == sorted_vals[i] && win_done == false) {
            container.appendChild(createMountainCard('winter_park'));
            win_done = true;
          }
        }

      }else if(sort_by == 'avg_busyness'){
        const copper_rec = copper.avg_busyness;
        const eldora_rec = eldora.avg_busyness;
        const steamboat_rec = steamboat.avg_busyness;
        const winter_park_rec = winter_park.avg_busyness;

        const sorted_vals = [copper_rec, eldora_rec, steamboat_rec, winter_park_rec].sort((x, y) => y - x);

        for(i in sorted_vals){
          if (copper_rec == sorted_vals[i] && copp_done == false) {
            container.appendChild(createMountainCard('copper'));
            copp_done = true;
          } else if (eldora_rec == sorted_vals[i] && eld_done == false) {
            container.appendChild(createMountainCard('eldora'));
            eld_done = true;
          } else if (steamboat_rec == sorted_vals[i] && stem_done == false) {
            container.appendChild(createMountainCard('steamboat'));
            stem_done = true;
          } else if (winter_park_rec == sorted_vals[i] && win_done == false) {
            container.appendChild(createMountainCard('winter_park'));
            win_done = true;
          }
        }

      }else if(sort_by == 'recommended'){
        const copper_rec = (copper.avg_rating + copper.avg_busyness);
        const eldora_rec = (eldora.avg_rating + eldora.avg_busyness);
        const steamboat_rec = (steamboat.avg_rating + steamboat.avg_busyness);
        const winter_park_rec = (winter_park.avg_rating + winter_park.avg_busyness);

        const scores = [
          { name: 'copper', value: copper_rec },
          { name: 'eldora', value: eldora_rec },
          { name: 'steamboat', value: steamboat_rec },
          { name: 'winter_park', value: winter_park_rec },
        ];

        const sorted_vals = [copper_rec, eldora_rec, steamboat_rec, winter_park_rec].sort((x, y) => y - x);

        for (const score of scores) {
          if (score.name === 'copper' && !copp_done) {
            container.appendChild(createMountainCard('copper'));
            copp_done = true;
          } else if (score.name === 'eldora' && !eld_done) {
            container.appendChild(createMountainCard('eldora'));
            eld_done = true;
          } else if (score.name === 'steamboat' && !stem_done) {
            container.appendChild(createMountainCard('steamboat'));
            stem_done = true;
          } else if (score.name === 'winter_park' && !win_done) {
            container.appendChild(createMountainCard('winter_park'));
            win_done = true;
          }
        }

      }else{
        container.appendChild(createMountainCard('copper'));
        container.appendChild(createMountainCard('eldora'));
        container.appendChild(createMountainCard('steamboat'));
        container.appendChild(createMountainCard('winter_park'));
      }
    }

    function createMountainCard(trail){
      console.log(copper.avg_busyness);
      if(trail == 'copper'){
        const card = document.createElement('div');
        card.className = 'mountain';
        card.id = 'copper';

      
        card.innerHTML = `
          <div class="header">
            <span>Copper</span>
            <span>
              <a href="copper" class="info-button btn btn-primary">More Info</a>
              <span class="arrow" onclick="toggleMountain('copper')">▼</span>
            </span>
          </div>
          <div class="lifts">
            <div class="basic-info">
              <div class="basic-info-row"><span>Average Rating</span><span>${copper.avg_rating || '-'}/5</span></div>
              <div class="basic-info-row"><span>Busyness Rating</span><span>${copper.avg_busyness || '-'}/5</span></div>
              <div class="basic-info-row"><span>Weather</span><span></span></div>
              <div class="basic-info-row"><span>Wind Speed</span><span>mph</span></div>
            </div>
          </div>
        `;

        return card;

      }else if(trail == 'eldora'){
        const card = document.createElement('div');
        card.className = 'mountain';
        card.id = 'eldora';
      
        card.innerHTML = `
          <div class="header">
            <span>Eldora</span>
            <span>
              <a href="eldora" class="info-button btn btn-primary">More Info</a>
              <span class="arrow" onclick="toggleMountain('eldora')">▼</span>
            </span>
          </div>
          <div class="lifts">
            <div class="basic-info">
              <div class="basic-info-row"><span>Average Rating</span><span>${eldora.avg_rating || '-'}/5</span></div>
              <div class="basic-info-row"><span>Busyness Rating</span><span>${eldora.avg_busyness || '-'}/5</span></div>
              <div class="basic-info-row"><span>Weather</span><span></span></div>
              <div class="basic-info-row"><span>Wind Speed</span><span>mph</span></div>
            </div>
          </div>
        `;
      
        return card;
      }else if(trail == 'steamboat'){
        const card = document.createElement('div');
        card.className = 'mountain';
        card.id = 'steamboat';
      
        card.innerHTML = `
          <div class="header">
            <span>Steamboat</span>
            <span>
              <a href="steamboat" class="info-button btn btn-primary">More Info</a>
              <span class="arrow" onclick="toggleMountain('steamboat')">▼</span>
            </span>
          </div>
          <div class="lifts">
            <div class="basic-info">
              <div class="basic-info-row"><span>Average Rating</span><span>${steamboat.avg_rating || '-'}/5</span></div>
              <div class="basic-info-row"><span>Busyness Rating</span><span>${steamboat.avg_busyness || '-'}/5</span></div>
              <div class="basic-info-row"><span>Weather</span><span></span></div>
              <div class="basic-info-row"><span>Wind Speed</span><span>mph</span></div>
            </div>
          </div>
        `;
      
        return card;

      }else if(trail == 'winter_park'){
        const card = document.createElement('div');
        card.className = 'mountain';
        card.id = 'winter_park';
      
        card.innerHTML = `
          <div class="header">
            <span>Winter Park</span>
            <span>
              <a href="winter park" class="info-button btn btn-primary">More Info</a>
              <span class="arrow" onclick="toggleMountain('winter_park')">▼</span>
            </span>
          </div>
          <div class="lifts">
            <div class="basic-info">
              <div class="basic-info-row"><span>Average Rating</span><span>${winter_park.avg_rating || '-'}/5</span></div>
              <div class="basic-info-row"><span>Busyness Rating</span><span>${winter_park.avg_busyness || '-'}/5</span></div>
              <div class="basic-info-row"><span>Weather</span><span></span></div>
              <div class="basic-info-row"><span>Wind Speed</span><span>mph</span></div>
            </div>
          </div>
        `;
      
        return card;

      }
    }

    function toggleMountain(id) {
      const el = document.getElementById(id);
      el.classList.toggle('open');
      const arrow = el.querySelector('.arrow');
      arrow.textContent = el.classList.contains('open') ? '▲' : '▼';
    }
  </script>
</body>
</html>
